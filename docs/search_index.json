[
["index.html", "ITAM - Estadística 2 Chapter 1 Introduccion", " ITAM - Estadística 2 Salvador García Chapter 1 Introduccion "],
["introducción-a-r.html", "Chapter 2 Introducción a R 2.1 El lenguaje de programación R 2.2 Paquetes y librerias de R 2.3 Paradigma de R 2.4 Proyectos de R y Paths 2.5 Instalación de R 2.6 Instalación de Rstudio 2.7 Instalación de paquetes desde el CRAN. 2.8 Ayuda y vignettes 2.9 Namespaces 2.10 Paquetería útil para el análisis de datos 2.11 Estructuras de datos en R 2.12 Funciones, condicionales e iteraciones:", " Chapter 2 Introducción a R Este curso está diseñado como un curso introductorio al lenguaje de programación R. Se hace una exploración rápida de la filosofia detrás de R, así como paquetes más usados y use cases más comunes. 2.1 El lenguaje de programación R R es un lenguaje de programación con un enfoque al análisis estadístico. R es un software libre de código abierto. De esta manera se permite hacer profiling y debugging a profundidad. (¡E instalarlo y utilizarlo en cualquier lugar!) R es un software hecho a la medida; es decir, el usuario instala la paquetería necesaria a sus necesidades. 2.2 Paquetes y librerias de R La primer diferencia para entender R, es entender la diferencia entre paquete y libreria. Paquete es el grupo de codigos que descargamos de internet y libreria es un paqute que se encuentra instalado y listo para usar. La paquetería básica de R está basada en librerías en Fortran y C, creando wrappers que hacen referencia a las funciones originales. Por ejemplo, al calcular distintas factorizaciones de matrices (LU, Chol, QR, SVD, Schur) son calculadas utilizando la librería de LAPACK. Algunas paqueterías requieren que el software este instalado en el sistema. Por ejemplo: la mayoría de paquetería para manipulación de imágenes (png, jpeg, svg). Esta paquetería está por default instalada en Windows y macOS la paquetería para simular MCMC (R2Jags, Rstan, R2OpenBUGS), Se tiene que instalar explícitamente en Windows y macOS, así como añadir a las respectivas variables de entorno 2.3 Paradigma de R ¿Es R un Lenguage orientado a objetos? R es considerado un lenguaje multiparadigma. Es decir, puede ser orientado a objetos o no, puede ser funcional o no, puede ser imperativo o no. Esta flexibilidad nace de la necesidad y la diversidad de usuarios. Por ejemplo, R tiene 3 sistemas distintos de programación orientada a objetos (más los heredados de otros lenguajes). ¿R vs Python? R y python son ambos lenguajes de alto nivel. Mucho se habla que Python es más eficiente que R (con varios papers realizando benchmarks), pero en la realidad ambos lenguajes presentan un performance mucho más bajo que lenguajes low level como C o C++. En mi opinión, si solo se requiere analizar datos, escribir scripts de automatización y modelar datos, R es la herramienta adecuada. Si se quiere tener cosas en productivo, Python es una herramienta adecuada. 2.4 Proyectos de R y Paths 2.5 Instalación de R 2.6 Instalación de Rstudio 2.7 Instalación de paquetes desde el CRAN. 2.8 Ayuda y vignettes 2.9 Namespaces 2.10 Paquetería útil para el análisis de datos 2.11 Estructuras de datos en R 2.11.1 Vectores atómicos 2.11.2 Matrices y arrays. 2.11.3 Listas. 2.11.4 Data.frames 2.12 Funciones, condicionales e iteraciones: 2.12.1 Funciones 2.12.2 Condicionales 2.12.3 Iteraciones "]
]
